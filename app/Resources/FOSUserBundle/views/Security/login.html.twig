{% extends "FOSUserBundle::layout.html.twig" %}
{% trans_default_domain 'FOSUserBundle' %}
{% block OnLoad-%}onLoad="this.document.formulario._username.focus();"{% endblock OnLoad%}
{% block titleform-%}INICIO DE SESION{% endblock titleform%}
{% block fos_user_content %}

    <style>
    .input-group{
        margin: 0 auto 15px;
        width: 70%;
        }
    .login-form input[type=checkbox]{
            width: 25%;
            display:inline-block;
        }
    </style>
    
{% if error %}
    <div class="alert alert-danger">
	<button type="button" class="close" data-dismiss="alert">&times;</button>
	<h4>Error!</h4>
	{{ error.messageKey|trans(error.messageData, 'security') }}                                                             
   </div>

    
    {% endif %}
 <form name=formulario action="{{ path("fos_user_security_check") }}" id="login-form"  method="post">
                                                                  <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
                                                                   <div class="input-group">
						   		 <input type="text" class="form-control input-field" placeholder="{{ 'security.login.username'|trans }}"  id="username" name="_username" value="{{ last_username }}"  required="required" onKeyPress="retorm-controlurn validatext(event,_username,20)" onkeyup="tabulador(event,_password)"> 
                                                                 <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                                                 </div>
                                                                 <div class="input-group">
						   		 <input type="password" class="form-control input-field" placeholder="{{ 'security.login.password'|trans }}" id="password" name="_password"  required="required" onKeyPress="return validatext(event,_password,64)"  onkeyup="ingresar(event)"> 
                                                                 <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                                                 </div>
						   		 <div class="input-group text-right">
                                                                    <label class="checkbox-inline" >
                                                                     <input  id="rememberme" class="checkbox" type="checkbox" name="_remember_me" checked="">
                                                                     {{ 'security.login.remember_me'|trans }}
                                                                    </label>
                                                                </div>
                                                                 <input  type="submit" class="btn btn-login" id="login-btn" name="_submit" value="{{ 'security.login.submit'|trans }}" />
</form>	
    <!-- Login form -->
   <div class="sign-footer">
        
        {#<div class="input-group">
            <span>Si eres estudiante de esta entidad tu usuario es tu numero de matricula sin los 0 (ceros) a la izquierda  y tu nueva clave es 'estudiante'</span>
        </div>#}
        
    </div><!-- /.sign-footer -->
    <div class="login-links"> 
            <a href="{{path('fos_user_resetting_request')}}">
                   Olvido su contraseña?
            </a>
            <br>
            <a href="#">
              Aún no tiene una cuenta? <strong>Regístrese</strong>
            </a>
                </div>  
                                                        
<!--/ Login form -->
<script type="text/javascript">
        var nav = window.Event ? true : false;
        function tabulador(evt,enfoque){	
           var key = nav ? evt.which : evt.keyCode;
           if (key === 13){
              enfoque.focus();  
           }
        }
        function ingresar(evt){	
           var key = nav ? evt.which : evt.keyCode;
           if (key === 13){
               document.formulario.submit();  
           }
        }
        function validatext(evt,texto,limite){	
           var key = nav ? evt.which : evt.keyCode;
           if (texto.value.length < limite){ 
               return ((key >= 225 && key <= 250 ) || key == 45  || key == 40 || key == 41 || key == 45 || key == 47 || key == 32 || key == 95 || key == 46 || key == 64 || key == 8 || key == 38 ||  (key >= 97 && key <= 122) || (key >= 65 && key <= 90) || (key >= 48 && key <= 57) || key == 241 ||  key == 209);
           }else{	
                return ((key === 0)|| (key === 8));
           }
        }

        </script>
{% endblock fos_user_content %}