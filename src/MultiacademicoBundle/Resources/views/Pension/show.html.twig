{% extends 'base.html.twig' %}

{% block body %}
    <link rel="stylesheet" href="{{asset('css/multiacademico.css')}}" />
    <link rel="stylesheet" href="{{asset('css/imprimir.css')}}" />
<script>
    function Unidades(num){

  switch(num)
  {
    case 1: return "UN";
    case 2: return "DOS";
    case 3: return "TRES";
    case 4: return "CUATRO";
    case 5: return "CINCO";
    case 6: return "SEIS";
    case 7: return "SIETE";
    case 8: return "OCHO";
    case 9: return "NUEVE";
  }

  return "";
}

function Decenas(num){

  decena = Math.floor(num/10);
  unidad = num - (decena * 10);

  switch(decena)
  {
    case 1:   
      switch(unidad)
      {
        case 0: return "DIEZ";
        case 1: return "ONCE";
        case 2: return "DOCE";
        case 3: return "TRECE";
        case 4: return "CATORCE";
        case 5: return "QUINCE";
        default: return "DIECI" + Unidades(unidad);
      }
    case 2:
      switch(unidad)
      {
        case 0: return "VEINTE";
        default: return "VEINTI" + Unidades(unidad);
      }
    case 3: return DecenasY("TREINTA", unidad);
    case 4: return DecenasY("CUARENTA", unidad);
    case 5: return DecenasY("CINCUENTA", unidad);
    case 6: return DecenasY("SESENTA", unidad);
    case 7: return DecenasY("SETENTA", unidad);
    case 8: return DecenasY("OCHENTA", unidad);
    case 9: return DecenasY("NOVENTA", unidad);
    case 0: return Unidades(unidad);
  }
}//Unidades()

function DecenasY(strSin, numUnidades){
  if (numUnidades > 0)
    return strSin + " Y " + Unidades(numUnidades)

  return strSin;
}//DecenasY()

function Centenas(num){

  centenas = Math.floor(num / 100);
  decenas = num - (centenas * 100);

  switch(centenas)
  {
    case 1:
      if (decenas > 0)
        return "CIENTO " + Decenas(decenas);
      return "CIEN";
    case 2: return "DOSCIENTOS " + Decenas(decenas);
    case 3: return "TRESCIENTOS " + Decenas(decenas);
    case 4: return "CUATROCIENTOS " + Decenas(decenas);
    case 5: return "QUINIENTOS " + Decenas(decenas);
    case 6: return "SEISCIENTOS " + Decenas(decenas);
    case 7: return "SETECIENTOS " + Decenas(decenas);
    case 8: return "OCHOCIENTOS " + Decenas(decenas);
    case 9: return "NOVECIENTOS " + Decenas(decenas);
  }

  return Decenas(decenas);
}//Centenas()

function Seccion(num, divisor, strSingular, strPlural){
  cientos = Math.floor(num / divisor)
  resto = num - (cientos * divisor)

  letras = "";

  if (cientos > 0)
    if (cientos > 1)
      letras = Centenas(cientos) + " " + strPlural;
    else
      letras = strSingular;

  if (resto > 0)
    letras += "";

  return letras;
}//Seccion()

function Miles(num){
  divisor = 1000;
  cientos = Math.floor(num / divisor)
  resto = num - (cientos * divisor)

  strMiles = Seccion(num, divisor, "UN MIL", "MIL");
  strCentenas = Centenas(resto);

  if(strMiles == "")
    return strCentenas;

  return strMiles + " " + strCentenas;

  //return Seccion(num, divisor, "UN MIL", "MIL") + " " + Centenas(resto);
}//Miles()

function Millones(num){
  divisor = 1000000;
  cientos = Math.floor(num / divisor)
  resto = num - (cientos * divisor)

  strMillones = Seccion(num, divisor, "UN MILLON", "MILLONES");
  strMiles = Miles(resto);

  if(strMillones == "")
    return strMiles;

  return strMillones + " " + strMiles;

  //return Seccion(num, divisor, "UN MILLON", "MILLONES") + " " + Miles(resto);
}//Millones()

function NumeroALetras(num){
  var data = {
    numero: num,
    enteros: Math.floor(num),
    centavos: (((Math.round(num * 100)) - (Math.floor(num) * 100))),
    letrasCentavos: ""
  };

  if (data.centavos > 0)
    data.letrasCentavos = "CON " + data.centavos + "/100";

  if(data.enteros == 0)
    return "CERO " + data.letrasCentavos;
  else
    return Millones(data.enteros) + " " + data.letrasCentavos;
}//NumeroALetras()
</script>
   <script>
          var  facturaDefinition = {
                               content: [
                                 
                                {
                                  table: {
                                    // headers are automatically repeated if the table spans over multiple pages
                                    // you can declare how many rows should be treated as headers
                                    //headerRows: 1,
                                    widths: [ 200, '*' ],
                                    body: [
                                      [{ text: "{{ pension.factura.idcliente }}", style:'letradatos'}, { text: "{{ pension.factura.idcliente.telefono }}", style:'numeros'}],
                                      [{ text: "{{ pension.factura.idcliente.cedula }}", style:'letradatos'}, { text: "{{ 'now'|date('Y-m-d')}}", style:'numeros'}],
                                      [{ text: "{{ pension.factura.idcliente.domicilio }}", style:'letradatos',  colSpan: 2},{}]
                                    ]
                                },
                                layout: 'noBorders',
                                margin: [70,70,0,0]
                                },
                               
                               {
                                  table: {
                                    widths: [35,'*',25,78,50,78 ],
                                    body: [
                                            {% for item in pension.factura.items%}
                                            [
                                                { text: "{{ item.idproducto.descripcionCorta }}", style:'letradatos'},
                                                { text: "{{ item.idproducto.descripcion }}\n Curso: {{pension.estudiante.getMatriculaVigente().getAula()|default('Estudiante No Matriculado')|e('js')}}", style:'datocenter'},
                                                { text: "{{item.cantidad}}", style:'numeros'},
                                                { text: "{{item.punitario}}", style:'numeros'},
                                                { text: "{{item.getValorDescuento()|number_format(2)}}", style:'numeros'},
                                                { text: "{{(item.getTotal())|number_format(2)}}", style:'numeros'}
                                            ]
                                            {%if not loop.last%}
                                            ,
                                            {%endif%}
                                            {%endfor%}
                                      
                                      
                                    ]
                                },
                                layout: 'noBorders',
                                margin: [0,40,0,0]
                                },
                                {
                                  table: {
                                    widths: [ 200, '*' ],
                                    body: [
                                      [{ text: '\n'+NumeroALetras(parseFloat({{pension.factura.total}})), style:'letradatos',rowSpan:2}, { text: "0.00", style:'numeros'}],
                                      [{}, { text: "{{pension.factura.subtotal}}\n\n", style:'numeros'}],
                                      [{text: "{{pension.estudiante}}", style:'letradatosmini',rowSpan:4}, { text: "{{pension.factura.descuento}}", style:'numeros'}],
                                      [{}, { text: "{{pension.factura.subtotal-pension.factura.descuento}}", style:'numeros'}],
                                      [{}, { text: "{{pension.factura.ivaigv}}", style:'numeros'}],
                                      [{}, { text: "{{pension.factura.total}}", style:'numeros'}]
                                    ]
                                },
                                layout: 'noBorders',
                                margin: [70,50,0,0]
                                }
                               ],
                               
                               /*defaultStyle:{
                                    font:'micross'
                               },*/
                               styles: {
                                 letradatos: {
                                   fontSize: 12,
                                   alignment: 'left'
                                 },
                                  letradatosmini: {
                                   fontSize: 10,
                                   alignment: 'left'
                                 },
                                 numeros: {
                                   fontSize: 12,
                                   alignment: 'right'
                                 },
                                 datocenter: {
                                   fontSize: 12,
                                   alignment: 'center'
                                 }
                             }
                         };
       </script>
    <h1 class="noprint">Pension</h1>
    
    <table class="noprint">
        <tbody>
            <tr>
                <th>Informacion</th>
                <td>{{ pension.info }}</td>
            </tr>
            <tr>
                <th>Emitida</th>
                <td>{{ pension.factura.emitido|date() }}</td>
            </tr>
            <tr>
                <th>Estudiante</th>
                <td>{{ pension.estudiante }}</td>
            </tr>
            <tr>
                <th>Codigo Factura</th>
                <td>{{ pension.factura.id }}</td>
            </tr>
            <tr>
                <th>Factura Numero Legal</th>
                <td>{{ pension.factura.legal }}</td>
            </tr>
            <tr>
                <th>Representante</th>
                <td>{{ pension.factura.idcliente }}</td>
            </tr>
            <tr>
                <th>Descuento</th>
                
                <td>${{ pension.factura.descuento }}</td>
            </tr>
            <tr>
                <th>Total a Pagar</th>
                
                <td>${{ pension.factura.total }}</td>
            </tr>
            <tr>
                <th>Estado</th>
                <td>{{ pension.factura.estado|readablehtml|raw }}</td>
            </tr>
            <tr>
                <th>Vencimiento</th>
                <td>{{ pension.factura.vencimiento|date() }}</td>
            </tr>
            <tr>
                <th>Fecha de Pago</th>
                
                <td>{{ pension.factura.pago is null?'No ha sido Pagada':pension.factura.pago|date() }}</td>
            </tr>
            
        </tbody>
    </table>

    <ul class="noprint">
        <li>
              <div class="btn-group">
                <button type="button" class="btn btn-app btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                                                <i class="fa fa-print"></i> Imprimir <span class="caret"></span>
                 </button> 
                <ul class="dropdown-menu" role="menu" ng-controller="PrintCtrl">
                    
                    {#<li>
                        <a href="#" data-ng-click="openModal('print_matricula_contrato',{'matricula':{{matricula.id}},'_format':'html'})"><i class="fa fa-print bigger-160"></i> Contrato</a>
                    </li>#}
                    <li class="divider"></li>
                    
                    <li>
                        <a href="#" data-ng-click="openModal('print_pension',{'pension':{{pension.id}},'_format':'html'})"></i> Solo Datos</a>
                    </li>
                    <li>
                        <a href="#" data-ng-click="printPDF(facturaDefinition)"></i> PDF</a>
                    </li>
                    <li>
                        <a href="{{path('printpdf_pension',{'pension':pension.id,'_format':'html'})}}" target="_blank"></i> PDR (prueba)</a>
                    </li>
                    {#<li>
                        <a ng-href="{{'{{urlAnexo('~entity.cedula~')}}'}}" target="_blank">Anexo</a>
                    </li>
                    
                    <li class="divider"></li>
                    <li>
                        <a href-void="" href="#">Separated link</a>
                    </li>#}
                </ul>
            </div>
        </li>    
        <li>
            <a href="{{ path('pension') }}">Regresar a la lista</a>
        </li>
        <li>
            <a href="{{ path('pension_edit', { 'page': pension.id }) }}">Editar</a>
        </li>
        <li>
            {{ form_start(delete_form) }}
                <input type="submit" value="Eliminar">
            {{ form_end(delete_form) }}
        </li>
    </ul>
    <!--area imprimible test -->
    <div class="printable" />
    <!-- fin area imprimible test -->
{% endblock %}
